// Generated by CoffeeScript 1.6.3
(function() {
  var caffeineChart,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  caffeineChart = (function() {
    function caffeineChart() {
      this.caffeineModel = __bind(this.caffeineModel, this);
    }

    caffeineChart.prototype.renderGraph = function(full_width, full_height) {
      var alldata, data, data_line, data_points, doses, height, inner_wrap, line_function, margin, outer_wrap, times, width, x, xAxis, y, yAxis;
      doses = 0;
      data = this.caffeineModel(doses);
      times = [];
      _.each(data, function(e) {
        return times.push(e[0]);
      });
      alldata = [];
      _.each(data, function(e) {
        alldata.push(e[1]);
        return alldata.push(e[2]);
      });
      margin = {
        top: 20,
        bottom: 40,
        left: 10,
        right: 20
      };
      width = full_width - margin.left - margin.right;
      height = full_height - margin.top - margin.bottom;
      outer_wrap = d3.select("#graph-container").attr("width", full_width).attr("height", full_height);
      inner_wrap = outer_wrap.append("g").attr("transform", "translate(" + margin.left + "," + margin.top + ")");
      x = d3.scale.linear().domain([_.min(times), _.max(times)]).range([0, width]);
      y = d3.scale.linear().domain([0, _.max(alldata)]).range([height, 0]);
      xAxis = d3.svg.axis().scale(x).orient('bottom').ticks();
      yAxis = d3.svg.axis().scale(y).orient('left');
      line_function = d3.svg.line().x(function(d) {
        return x(d[0]);
      }).y(function(d) {
        return y(d[1]);
      });
      data_line = inner_wrap.append("g").append("path").datum(data).attr("class", "line").attr("fill", "none").attr("stroke", "black").attr("d", line_function(data));
      console.log(data);
      return data_points = inner_wrap.append('g').selectAll('circle').data(data).enter().append("circle").attr("cx", function(d) {
        return x(d[0]);
      }).attr("cy", function(d) {
        return y(d[1]);
      }).attr("r", 4);
    };

    caffeineChart.prototype.caffeineModel = function(doses) {
      var caffeineSystem, concentrations, endt, init_b, init_c, maxiters, retdata, sol, times;
      maxiters = 2000;
      endt = 4 * 60 * 60;
      init_b = 1;
      init_c = 100;
      caffeineSystem = function(t, concs) {
        var a, b_conc, c_conc, tau;
        tau = 1 / 5;
        a = 1;
        b_conc = concs[0];
        c_conc = concs[1];
        return [a * c_conc - tau * b_conc, -a * c_conc];
      };
      sol = numeric.dopri(0, endt, [init_b, init_c], caffeineSystem, 1e-6, maxiters);
      times = _.range(0, endt, endt / 20);
      concentrations = sol.at(times);
      retdata = [];
      _.each(times, function(e, i) {
        return retdata.push([e, concentrations[i][0], concentrations[i][1]]);
      });
      return retdata;
    };

    return caffeineChart;

  })();

  $(document).ready(function() {
    var chart, full_height, full_width;
    full_width = $(window).width();
    full_height = $(window).height();
    chart = new caffeineChart;
    chart.renderGraph(full_width, full_height);
  });

}).call(this);
